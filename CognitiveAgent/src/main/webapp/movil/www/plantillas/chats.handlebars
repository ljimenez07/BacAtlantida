<div style="height: 54px" />
<div class="container contenedor-campo-de-entrada">
	<div id="chat-id-container-{{pathDelServidor}}" class="row">
		<div class="col-xs-10">
			<input placeholder="Escribe aquÃ­" type="text" id="campoDeEntrada" class="form-control" >
		</div>
		<div class="col-xs-2">
			<button id="enviar" class="btn btn-default"></button>
		</div>
	</div>
</div>
<style>
	.panel-body
	{
		height: 100%;
		overflow: scroll;
	}
</style>

<script>

$(function(){
	function initChats{{pathDelServidor}}()
	{
		var chat = $("#chat-id-{{pathDelServidor}} .chat");
		var conversation = $("#chat-id-{{pathDelServidor}} #conversation");
		var campoDeEntrada = $("#chat-id-container-{{pathDelServidor}} #campoDeEntrada");
		var mensajeDeAgente = $('<li class="other"><div class="msg"><p></p><time>20:17</time></div></li>');
		var mensajeDeUsuario = $('<li class="self"><div class="msg"><p></p><time>20:17</time></div></li>');
		var botonDeEnviarMensaje = $("#chat-id-container-{{pathDelServidor}} #enviar");
		var ultimoMensajeEnviado="";
		var debeReproducirElAudio = false;
		var guardarCola = true;
		var colaDeReproduccion = new Array();
		
		$("#chat-id-{{pathDelServidor}}").prepend('<div style="height: 54px" />');
		if(deviceType != "iPad" && deviceType != "iPhone")
		{
			$("#chat-id-{{pathDelServidor}}").prepend('<div class="row contenedor-boton-escuchar-mensajes"><div class="col-xs-6"><div class="boton-escuchar-mensajes desactivado" /></div></div>');
		}
		$("#chat-id-{{pathDelServidor}} .boton-escuchar-mensajes").click(function()
		{
			$(this).toggleClass("activado").toggleClass("desactivado");
			debeReproducirElAudio = !debeReproducirElAudio;
			guardarCola = false;
			if(colaDeReproduccion.length > 0)
			{
				$.each(colaDeReproduccion, function(index, value)
				{
					reproducirMensaje(value);
				});
			}
			if(!debeReproducirElAudio)
			{
				colaDeReproduccion = new Array();
				audios = new Array();
				audioEnReproduccion.pause();
				estaReproduciendo = false;
			}
		});
		
		function reproducirMensaje(pathDelAudio, callback)
		{
			if(debeReproducirElAudio)
			{
				agregarAColaDeReproduccion(pathDelAudio, callback);
			}
			else if(guardarCola)
			{
				colaDeReproduccion.push(pathDelAudio);
			}
		}
		
		botonDeEnviarMensaje.click(function()
		{
			enviarAlServer({ textoAEnviar:campoDeEntrada.val() });
		});
		
		resizeDiv();
		
		window.onresize = function(event) {
			resizeDiv();
		}
		
		function resizeDiv(muestraTeclado, callback)
		{
			if(callback != undefined)
			{
				callback();
			}
		}
		
		$('input').bind('focus', function()
		{
			resizeDiv(true, function(){
				moverScrollParaAbajoEnFuncionDelUltimoMensaje(function()
					{
						var tamanioEnPxDelScroll = chat.parent().parent()[0].scrollHeight;
						if(tamanioEnPxDelScroll > 0) // evita que el scroll retorne arriba por culpa del callback.
						{
							$("html, body").animate({scrollTop: tamanioEnPxDelScroll}, "fast");
						}
					
					});
			});
		});
		
		$('input').bind('blur', function()
		{
			setTimeout(resizeDiv, 100);
		});
		
		campoDeEntrada.keypress(function(e)
		{
			if(e.which == 13) 
			{
				enviarAlServer({ textoAEnviar:campoDeEntrada.val()});
			}
		});
		
		enviarAlServer({sePuedenEnviarVaciosAlServer:true, imprimirElMensajeQueElUsuarioEscribioEnLaConversacion:false, textoAEnviar:"Hola"});
		
		function enviarAlServer(param)
		{
			var sePuedenEnviarVaciosAlServer = ( param.sePuedenEnviarVaciosAlServer == undefined ) ? false : true;
			var imprimirElMensajeQueElUsuarioEscribioEnLaConversacion = ( param.imprimirElMensajeQueElUsuarioEscribioEnLaConversacion == undefined ) ? true : false;
			var textoAEnviar = param.textoAEnviar.trim();
					
			if(!sePuedenEnviarVaciosAlServer && textoAEnviar == "") return	
			if(imprimirElMensajeQueElUsuarioEscribioEnLaConversacion)
			{
				var fecha = new Date();
				var hora = dosDigitos(fecha.getHours()) + ":" + dosDigitos(fecha.getMinutes());
				var mensaje = mensajeDeUsuario.clone();
				mensaje.find(".msg p").html(textoAEnviar);
				mensaje.find("time").html(hora);
				campoDeEntrada.val("");
				conversation.append(mensaje);
				
				moverScrollParaAbajoEnFuncionDelUltimoMensaje();
			}
			
			ajax({
				type: "POST",
				contentType :"text/plain; charset=UTF-8",
				url : serverDomain + "/conversacion/{{pathDelServidor}}/",
				data : textoAEnviar,
				done: function( data ) 
				{
					var callback, callbackOnPlay;
					var textos = data.textos;
					if(textos != undefined)
					{
						var indiceDelUltimoMensajeConAudio;
						if(data.seTerminoElChat)
						{
							debeEjecutarCallbackEnElCambioDeVista = true;
							ajax({
								url: serverDomain + "/conversacion/borrarUnaConversacion"
							});
							
							campoDeEntrada.attr("disabled", true);
							
							callback = function(seEstaEjecutandoEnElCambioDeVista)
							{
								$(".app #{{pathDelServidor}}").html(Handlebars.templates.layout(pantallas["{{pathDelServidor}}"]));
								bindClickeable();
								if(estaReproduciendo)
								{
									audioEnReproduccion.pause();
									estaReproduciendo = false;
								}
								reproducirCola();
								if(seEstaEjecutandoEnElCambioDeVista == undefined || !seEstaEjecutandoEnElCambioDeVista)
								{
									cambiarVista("ofertas", true);
								}
							};
							
							callbackOnPlay = function()
							{
								aunDebeEjecutarCallback = false;
							};
						
							for(var i = 0; i < textos.length; i++)
							{
								if(textos[i].audio != "")
								{
									indiceDelUltimoMensajeConAudio = i;
								}
							}
							
							if(!debeReproducirElAudio || indiceDelUltimoMensajeConAudio == undefined)
							{
								setTimeout(function()
								{
									if(aunDebeEjecutarCallback)
									{
										callback();
									}
								}, 15000);
							}
						}
						else
						{
							callback = function()
							{
								
							};
							
							callbackOnPlay = function()
							{
								
							};
						}
						
						var fecha = new Date();
						var hora = dosDigitos(fecha.getHours()) + ":" + dosDigitos(fecha.getMinutes());
						for(var i = 0; i < textos.length; i++)
						{
							var htmlAudio = "";
							if(textos[i].audio != "")
							{
								if(deviceType == "iPad" || deviceType == "iPhone")
								{
									aunDebeEjecutarCallback = true;
									aux1 = callback;
									aux2 = callbackOnPlay;
									htmlAudio = '<br /><br /><audio controls preload="auto" onended="aux1()" onplay="aux2()"><source src="' + serverDomain + textos[i].audio + '"></audio>';
								}
								else
								{
									if(i == indiceDelUltimoMensajeConAudio)
									{
										reproducirMensaje(textos[i].audio, callback);
									}
									else
									{
										reproducirMensaje(textos[i].audio);
									}
								}
							}
							var respuesta = mensajeDeAgente.clone();
							respuesta.find(".msg p").html(textos[i].texto + htmlAudio);
							respuesta.find("time").html(hora);
							conversation.append(respuesta);
						}
					}
					moverScrollParaAbajoEnFuncionDelUltimoMensaje();
				},
				fail: function(XMLHttpRequest, textStatus, textStatus) 
				{
					console.log(JSON.stringify(XMLHttpRequest));
					console.log(XMLHttpRequest.responseJSON.exception);
					if( XMLHttpRequest.responseJSON.exception.includes("NoSessionException") )
					{
						cambiarVista( "login" , true);
					}
				}
			});
			
			ultimoMensajeEnviado = textoAEnviar;
		}
		
		function moverScrollParaAbajoEnFuncionDelUltimoMensaje(callback)
		{
			window.scrollTo(0,chat.parent().parent()[0].scrollHeight);
			if(callback != undefined)
			{
				callback();
			}
		}
		
		this.reenviarUltimoMensajeSinImprimirlo = function()
		{
			enviarAlServer({sePuedenEnviarVaciosAlServer:false, imprimirElMensajeQueElUsuarioEscribioEnLaConversacion:false, textoAEnviar:ultimoMensajeEnviado});
		}
		
		function dosDigitos(numero)
		{
			return numero > 9 ? numero : "0" + numero
		}
	}
	var initChats{{pathDelServidor}} = initChats{{pathDelServidor}}();	
});
</script>